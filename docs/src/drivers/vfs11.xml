<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<?asciidoc-toc?>
<?asciidoc-numbered?>

<book lang="en">
<bookinfo>
    <title>VFS11 VFD Driver</title>
</bookinfo>
<preface>
<title></title>
<simpara id="cha:vfs11-vfd-driver">This is a userspace HAL program to control the S11 series of VFD&#8217;s from
Toshiba.</simpara>
<simpara>vfs11_vfd supports serial and TCP connections. Serial connections may
be RS232 or RS485. RS485 is supported in full- and half-duplex
mode. TCP connections may be passive (wait for incoming connection),
or active outgoing connections, which may be useful to connect to
TCP-based devices or through a terminal server.</simpara>
<simpara>Regardless of the connection type, vfs11_vfd operates as a Modbus master.</simpara>
<simpara>This component is loaded using the halcmd "loadusr" command:</simpara>
<screen>loadusr -Wn spindle-vfd vfs11_vfd -n spindle-vfd</screen>
<simpara>The above command says: loadusr, wait for named to load,
component vfs11_vfd, named spindle-vfd</simpara>
</preface>
<chapter id="_command_line_options">
<title>Command Line Options</title>
<simpara><emphasis>vfs11_vfd</emphasis> is mostly configured through inifile options. The command
line options are:</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis>-n or --name &lt;halname&gt;</emphasis> : set the HAL component name
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>-I or --ini &lt;inifilename&gt;</emphasis> : take configuration from this ini file. Defaults to environment variable INI_FILE_NAME.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>-S or --section &lt;section name&gt;</emphasis> : take configuration from this section in the ini file. Defaults to <emphasis>VFS11</emphasis>.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>-d or --debug</emphasis> enable debug messages on console output.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>-m or --modbus-debug</emphasis> enable modbus messages on console output
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>-r or --report-device</emphasis> report device properties on console at startup
</simpara>
</listitem>
</itemizedlist>
<simpara>Debugging can be toggled by sending a USR1 signal to the vfs11_vfd process. Modbus
debugging can be toggled by sending a USR2 signal to vfs11_vfd process
(example: <literal>kill -USR1 `pidof vfs11_vfd`</literal>).</simpara>
<note><simpara>That if there are serial configuration errors, turning on verbose
may result in a flood of timeout errors.</simpara></note>
</chapter>
<chapter id="_pins">
<title>Pins</title>
<simpara>Where &lt;n&gt; is <literal>vfs11_vfd</literal> or the name given during loading with the -n  option.</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.acceleration-pattern</emphasis> (bit, in) when true, set acceleration and
   deceleration times as defined in registers F500 and F501
   respectively.  Used in PID loops to choose shorter ramp
   times to avoid oscillation.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.alarm-code</emphasis> (s32, out) non-zero if drive is in alarmed
   state. Bitmap describing alarm information (see register
   FC91 description).  Use err-reset (see below) to clear the
   alarm.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.at-speed</emphasis> (bit, out)
   when drive is at commanded speed (see speed-tolerance below)
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.current-load-percentage</emphasis> (float, out)
   reported from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.dc-brake</emphasis> (bit, in)
   engage the DC brake. Also turns off spindle-on.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.enable</emphasis> (bit, in)
   enable the VFD. If false, all operating parameters are still read but control is released and  panel  control
   is enabled (subject to VFD setup).
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.err-reset</emphasis> (bit, in)
   reset  errors  (alarms a.k.a Trip and e-stop status). Resetting the VFD may cause a 2-second delay until it&#8217;s
   rebooted and Modbus is up again.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.estop</emphasis> (bit, in)
   put the VFD into emergency-stopped status. No operation possible until cleared  with  err-reset  or  powercycling.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.frequency-command</emphasis> (float, out)
   current target frequency in HZ as set through speed-command (which is in RPM), from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.frequency-out</emphasis> (float, out)
   current output frequency of the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.inverter-load-percentage</emphasis> (float, out)
   current load report from VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.is-e-stopped</emphasis> (bit, out)
   the VFD is in emergency stop status (blinking "E" on panel). Use err-reset to reboot the VFD and clear the e-
   stop status.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.is-stopped</emphasis> (bit, out)
   true when the VFD reports 0 Hz output
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.max-rpm</emphasis> (float, R)
   actual RPM limit based on maximum frequency the VFD may  generate,  and  the  motors  nameplate  values.  For
   instance,  if  nameplate-HZ is 50, and nameplate-RPM_ is 1410, but the VFD may generate up to 80Hz, then max-
   rpm would read as 2256 (80*1410/50). The frequency limit is read from the VFD at startup.   To  increase  the
   upper  frequency  limit,  the  UL  and FH parameters must be changed on the panel.  See the VF-S11 manual for
   instructions how to set the maximum frequency.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.modbus-ok</emphasis> (bit, out)
   true when the Modbus session is successfully established and the last 10 transactions returned without error.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.motor-RPM</emphasis> (float, out)
   estimated current RPM value, from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.output-current-percentage</emphasis> (float, out)
   from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.output-voltage-percentage</emphasis> (float, out)
   from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.output-voltage</emphasis> (float, out)
   from the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.speed-command</emphasis> (float, in)
   speed sent to VFD in RPM. It is an error to send a speed faster than the Motor Max RPM as set in the VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.spindle-fwd</emphasis> (bit, in)
   1 for FWD and 0 for REV, sent to VFD
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.spindle-on</emphasis> (bit, in)
   1 for ON and 0 for OFF sent to VFD, only on when running
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.spindle-rev</emphasis> (bit, in)
   1 for ON and 0 for OFF, only on when running
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.jog-mode</emphasis> (bit, in)
   1 for ON and 0 for OFF, enables the VF-S11 <emphasis>jog mode</emphasis>. Speed control is disabled, and the output frequency is
   determined by register F262 (preset to 5Hz). This might
   be useful for spindle orientation. In normal mode, the
   VFD shuts off if the frequency drops below 12Hz.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.status</emphasis> (s32, out)
   Drive Status of the VFD (see the TOSVERT VF-S11 Communications Function Instruction Manual, register FD01). A
   bitmap.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.trip-code</emphasis> (s32, out)
   trip code if VF-S11 is in tripped state.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.error-count</emphasis> (s32, out)
   number of Modbus transactions which returned an error
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.max-speed</emphasis> (bit, in)
   ignore the loop-time parameter and run Modbus at maximum
   speed, at the expense of higher CPU usage. Suggested use
   during spindle positioning.
</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter id="_parameters">
<title>Parameters</title>
<simpara>Where &lt;n&gt; is <literal>vfs11_vfd</literal> or the name given during loading with the -n  option.</simpara>
<itemizedlist>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.frequency-limit</emphasis> (float, RO)
   upper limit read from VFD setup.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.loop-time</emphasis> (float, RW)
   how often the Modbus is polled (default interval 0.1 seconds)
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.nameplate-HZ</emphasis> (float, RW)
   Nameplate Hz of motor (default 50). Used to calculate target frequency (together with nameplate-RPM )  for  a
   target RPM value as given by speed-command.
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.nameplate-RPM</emphasis> (float, RW)
   Nameplate RPM of motor (default 1410)
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.rpm-limit</emphasis> (float, RW)
   do-not-exceed soft limit for motor RPM (defaults to nameplate-RPM ).
</simpara>
</listitem>
<listitem>
<simpara>
<emphasis>&lt;n&gt;.tolerance</emphasis> (float, RW)
   speed tolerance (default 0.01) for determining whether spindle is at speed (0.01 meaning: output frequency is
   within 1% of target frequency)
</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter id="_ini_file_configuration">
<title>INI file configuration</title>
<simpara>This lists all options understood by vfs11_vfd. Typical setups for
RS-232, RS-485 and TCP can be found in <emphasis>src/hal/user_comps/vfs11_vfd/*.ini</emphasis>.</simpara>
[VFS11]
# serial connection
TYPE=rtu

# serial port
DEVICE=/dev/ttyS0

# TCP server - wait for incoming connection
TYPE=tcpserver

# tcp portnumber for TYPE=tcpserver or tcpclient
PORT=1502

# TCP client - active outgoing connection
TYPE=tcpclient

# destination to connect to if TYPE=tcpclient
TCPDEST=192.168.1.1

#---------- meaningful only if TYPE=rtu -------
# serial device detail
# 5 6 7 8
BITS= 5

# even odd none
PARITY=none

# 110, 300, 600, 1200, 2400, 4800, 9600, 19200, 38400, 57600, 115200
BAUD=19200

# 1 2
STOPBITS=1

#rs232 rs485
SERIAL_MODE=rs485

# up down none
# this feature might not work with a stock Ubuntu
# libmodbus5/libmodbus-dev package, and generate a warning
# execution will continue as if RTS_MODE=up were given.
RTS_MODE=up
#---------------------

# modbus timers in seconds
# inter-character timer
BYTE_TIMEOUT=0.5
# packet timer
RESPONSE_TIMEOUT=0.5

# target modbus ID
TARGET=1

# on I/O failure, try to reconnect after sleeping
# for RECONNECT_DELAY seconds
RECONNECT_DELAY=1

# misc flags
DEBUG=10
MODBUS_DEBUG=0
POLLCYCLES=10</programlisting>
</chapter>
<chapter id="_hal_example">
<title>HAL example</title>
#
# example usage of the VF-S11 VFD driver
#
#
loadusr -Wn spindle-vfd vfs11_vfd -n spindle-vfd

# connect the spindle direction pins to the VFD
net vfs11-fwd spindle-vfd.spindle-fwd &lt;= spindle.0.forward
net vfs11-rev spindle-vfd.spindle-rev &lt;= spindle.0.reverse

# connect the spindle on pin to the VF-S11
net vfs11-run spindle-vfd.spindle-on &lt;= spindle.0.on

# connect the VF-S11 at speed to the motion at speed
net vfs11-at-speed spindle.0.at-speed &lt;= spindle-vfd.at-speed

# connect the spindle RPM to the VF-S11
net vfs11-RPM spindle-vfd.speed-command &lt;= spindle.0.speed-out

# connect the VF-S11 DC brake
# since this draws power during spindle off, the dc-brake pin would
# better be driven by a monoflop which triggers on spindle-on falling edge
#net vfs11-spindle-brake spindle.N.brake =&gt; spindle-vfd.dc-brake

# to use the VFS11 jog mode for spindle orient
# see orient.9 and motion.9
net spindle-orient spindle.0.orient spindle-vfd.max-speed spindle-vfd.jog-mode

# take precedence over control panel
setp spindle-vfd.enable 1</programlisting>
</chapter>
<chapter id="_panel_operation">
<title>Panel operation</title>
<simpara>The vfs11_vfd driver takes precedence over panel control while it is
enabled (see <emphasis>enable</emphasis> pin), effectively disabling the panel. Clearing
the <emphasis>enable</emphasis> pin re-enables the panel. Pins and parameters can still
be set, but will not be written to the VFD untile the <emphasis>enable</emphasis> pin is
set. Operating parameters are still read while bus control is
disabled. Exiting the vfs11_vfd driver in a controlled way will release
the VFD from the bus and restore panel control.</simpara>
<simpara>See the LinuxCNC Integrators Manual for more information. For a detailed
register description of the Toshiba VFD&#8217;s, see the "TOSVERT VF-S11
Communications Function Instruction Manual" (Toshiba document number
E6581222) and the "TOSVERT VF-S11 Instruction manual" (Toshiba
document number E6581158).</simpara>
</chapter>
<chapter id="_error_recovery">
<title>Error Recovery</title>
<simpara><literal>vfs11_vfd</literal> recovers from I/O errors as follows: First, all HAL pins
are set to default values, and the driver will sleep for
<literal>RECONNECT_DELAY</literal> seconds (default 1 second).</simpara>
<itemizedlist>
<listitem>
<simpara>
Serial (<literal>TYPE=rtu</literal>) mode: on error, close and reopen the serial port.
</simpara>
</listitem>
<listitem>
<simpara>
TCP server (<literal>TYPE=tcpserver</literal>) mode: on losing the TCP connection, the
  driver will go back to listen for incoming connections.
</simpara>
</listitem>
<listitem>
<simpara>
TCP client (<literal>TYPE=tcpclient</literal>) mode: on losing the TCP connection, the
  driver will reconnect to <emphasis>TCPDEST:PORTNO</emphasis>.
</simpara>
</listitem>
</itemizedlist>
</chapter>
<chapter id="_configuring_the_vfs11_vfd_for_modbus_usage">
<title>Configuring the VFS11 VFD for Modbus usage</title>
<section id="_connecting_the_serial_port">
<title>Connecting the Serial Port</title>
<simpara>The VF-S11 has an RJ-45 jack for serial communication. Unfortunately,
it does not have a standard RS-232 plug and logic levels.  The
Toshiba-recommended way is: connect the USB001Z USB-to-serial
conversion unit to the drive, and plug the USB port into the PC. A
cheaper alternative is a homebrew interface (
<ulink url="http://git.mah.priv.at/gitweb/vfs11-vfd.git/blob_plain/refs/heads/f12-prod:/VFS11-RJ45_e.pdf">hints
from Toshiba support</ulink>,
<ulink url="http://git.mah.priv.at/gitweb/vfs11-vfd.git/blob_plain/refs/heads/f12-prod:/vfs11-rs232.pdf">circuit diagram</ulink>).</simpara>
<simpara>Note: the 24V output from the VFD has no short-circuit protection.</simpara>
<simpara>Serial port factory defaults are 9600/8/1/even, the protocol defaults
to the proprietary "Toshiba Inverter Protocol".</simpara>
</section>
<section id="_modbus_setup">
<title>Modbus setup</title>
<simpara>Several parameters need setting before the VF-S11 will talk to
this module. This can either be done manually with the control panel,
or over the serial link - Toshiba supplies a Windows application
called <emphasis>PCM001Z</emphasis> which can read/set parameters in the VFD.  Note -
PCM001Z only talks the Toshiba inverter protocol. So the last
parameter which you&#8217;d want to change is the protocol - set from
Toshiba Inverter Protocol to Modbus; thereafter, the Windows app is
useless.</simpara>
<simpara>To increase the upper frequency limit, the UL and FH parameters must
be changed on the panel. I increased them from 50 to 80.</simpara>
<simpara>See dump-params.mio for a description of non-standard VF-S11
parameters of my setup. This file is for the
<ulink url="http://git.mah.priv.at/gitweb/modio.git">modio Modbus interactive utility</ulink>.</simpara>
</section>
</chapter>
<chapter id="_programming_note">
<title>Programming Note</title>
<simpara>The vfs11_vfd driver uses the <ulink url="http://www.libmodbus.org">libmodbus
version 3</ulink> library which is more recent than the version 2 code used
in <literal>gs2_vfd</literal>.</simpara>
<simpara>The Ubuntu <literal>libmodbus5</literal> and <literal>libmodbus-dev</literal> packages are
only available starting from Ubuntu 12 (<emphasis>Precise Pengolin</emphasis>). Moreover,
these packages lack support for the MODBUS_RTS_MODE_*
flags. Therefore, building vfs11_vfd using this library might generate
a warning if RTS_MODE= is specified in the ini file.</simpara>
<simpara>To use the full functionality on lucid and precise:
 * remove the libmodbus packages: <literal>sudo apt-get remove libmodbus5 libmodbus-dev</literal>
 * build and install libmodbus version 3 from source as outlined
   <ulink url="https://github.com/stephane/libmodbus/blob/master/README.rst">here</ulink>.</simpara>
<simpara>Libmodbus does not build on Ubuntu Hardy, hence vfs11_vfd is not
available on hardy.</simpara>
</chapter>
</book>
